// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216021558_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Entities.Carton", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("carton_no")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<decimal>("gross_weight")
                        .HasColumnType("numeric(38,17)");

                    b.Property<decimal>("height")
                        .HasColumnType("numeric(38,17)");

                    b.Property<decimal>("length")
                        .HasColumnType("numeric(38,17)");

                    b.Property<decimal>("net_weight")
                        .HasColumnType("numeric(38,17)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("numeric(38,17)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("volume")
                        .HasColumnType("numeric(38,17)");

                    b.Property<Guid>("warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("width")
                        .HasColumnType("numeric(38,17)");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("a_carton", "dbo");
                });

            modelBuilder.Entity("Database.Entities.CartonDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("carton_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("carton_id");

                    b.HasIndex("product_id");

                    b.ToTable("a_carton_detail", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_category", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Customer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("tax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_customer", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Function", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("method")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("parent_cd")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id");

                    b.HasIndex("parent_cd");

                    b.ToTable("a_function", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("a_ingredient", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Invoice", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("carton_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("invoice_date")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2");

                    b.Property<string>("invoice_no")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("order_id")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("payment_method_id")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("shipped_date")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2");

                    b.Property<string>("shipped_per")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("shipper_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<decimal?>("total_volumn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("total_weight")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("carton_id");

                    b.HasIndex("order_id");

                    b.HasIndex("payment_method_id");

                    b.HasIndex("shipper_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("a_invoice", "dbo");
                });

            modelBuilder.Entity("Database.Entities.LogAction", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("method")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("m_log_action", "dbo");
                });

            modelBuilder.Entity("Database.Entities.LogException", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("function")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stack_trace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("m_log_exception", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Order", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("customer_id")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<Guid?>("invoice_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("order_no")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("payment_method_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("numeric(38,17)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.HasIndex("payment_method_id");

                    b.ToTable("a_order", "dbo");
                });

            modelBuilder.Entity("Database.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<Guid>("order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("a_order_detail", "dbo");
                });

            modelBuilder.Entity("Database.Entities.OrderWarehouse", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<Guid>("order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("a_order_warehouse", "dbo");
                });

            modelBuilder.Entity("Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_payment_method", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Permission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("function_cd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("role_cd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("function_cd");

                    b.HasIndex("role_cd");

                    b.ToTable("a_permission", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ingredient")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("origin")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("price_unit")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("a_product", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Resource", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("lang")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("screen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("m_resource", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_role", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Shipper", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_shipper", "dbo");
                });

            modelBuilder.Entity("Database.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("hash_password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("salt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("verification_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("customer_id")
                        .IsUnique()
                        .HasFilter("[customer_id] IS NOT NULL");

                    b.ToTable("a_user", "dbo");
                });

            modelBuilder.Entity("Database.Entities.UserRole", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("role_cd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("role_cd");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("a_user_role", "dbo");
                });

            modelBuilder.Entity("Database.Entities.UserWarehouse", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("a_user_warehouse", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Warehouse", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("del_flg")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("tel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("a_warehouse", "dbo");
                });

            modelBuilder.Entity("Database.Entities.Carton", b =>
                {
                    b.HasOne("Database.Entities.Customer", "customer")
                        .WithMany("cartons")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Database.Entities.Warehouse", "warehouse")
                        .WithMany("cartons")
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Database.Entities.CartonDetail", b =>
                {
                    b.HasOne("Database.Entities.Carton", "carton")
                        .WithMany("carton_details")
                        .HasForeignKey("carton_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Product", "product")
                        .WithMany("carton_details")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("carton");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Database.Entities.Function", b =>
                {
                    b.HasOne("Database.Entities.Function", "parent")
                        .WithMany("children")
                        .HasForeignKey("parent_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("parent");
                });

            modelBuilder.Entity("Database.Entities.Ingredient", b =>
                {
                    b.HasOne("Database.Entities.Category", "category")
                        .WithMany("ingredients")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Database.Entities.Invoice", b =>
                {
                    b.HasOne("Database.Entities.Carton", "carton")
                        .WithMany("invoices")
                        .HasForeignKey("carton_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Order", "order")
                        .WithMany("invoices")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.PaymentMethod", "payment_method")
                        .WithMany("invoices")
                        .HasForeignKey("payment_method_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Shipper", "shipper")
                        .WithMany("invoices")
                        .HasForeignKey("shipper_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Warehouse", "warehouse")
                        .WithMany("invoices")
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("carton");

                    b.Navigation("order");

                    b.Navigation("payment_method");

                    b.Navigation("shipper");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Database.Entities.LogAction", b =>
                {
                    b.HasOne("Database.Entities.User", "user")
                        .WithMany("log_actions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("user");
                });

            modelBuilder.Entity("Database.Entities.Order", b =>
                {
                    b.HasOne("Database.Entities.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.PaymentMethod", "payment_method")
                        .WithMany("orders")
                        .HasForeignKey("payment_method_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("customer");

                    b.Navigation("payment_method");
                });

            modelBuilder.Entity("Database.Entities.OrderDetail", b =>
                {
                    b.HasOne("Database.Entities.Order", "order")
                        .WithMany("order_details")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Product", "product")
                        .WithMany("order_details")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Database.Entities.OrderWarehouse", b =>
                {
                    b.HasOne("Database.Entities.Order", "order")
                        .WithMany("order_warehouses")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Warehouse", "warehouse")
                        .WithMany("order_warehouses")
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Database.Entities.Permission", b =>
                {
                    b.HasOne("Database.Entities.Function", "function")
                        .WithMany("permissions")
                        .HasForeignKey("function_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Role", "role")
                        .WithMany("permissions")
                        .HasForeignKey("role_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("function");

                    b.Navigation("role");
                });

            modelBuilder.Entity("Database.Entities.Product", b =>
                {
                    b.HasOne("Database.Entities.Category", "category")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Database.Entities.Warehouse", "warehouse")
                        .WithMany("products")
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Database.Entities.User", b =>
                {
                    b.HasOne("Database.Entities.Customer", "customer")
                        .WithOne("user")
                        .HasForeignKey("Database.Entities.User", "customer_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Database.Entities.UserRole", b =>
                {
                    b.HasOne("Database.Entities.Role", "role")
                        .WithMany("user_roles")
                        .HasForeignKey("role_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.User", "user")
                        .WithOne("user_role")
                        .HasForeignKey("Database.Entities.UserRole", "user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Database.Entities.UserWarehouse", b =>
                {
                    b.HasOne("Database.Entities.User", "user")
                        .WithMany("user_warehouses")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Entities.Warehouse", "warehouse")
                        .WithMany("user_warehouses")
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("user");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Database.Entities.Carton", b =>
                {
                    b.Navigation("carton_details");

                    b.Navigation("invoices");
                });

            modelBuilder.Entity("Database.Entities.Category", b =>
                {
                    b.Navigation("ingredients");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Database.Entities.Customer", b =>
                {
                    b.Navigation("cartons");

                    b.Navigation("orders");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Database.Entities.Function", b =>
                {
                    b.Navigation("children");

                    b.Navigation("permissions");
                });

            modelBuilder.Entity("Database.Entities.Order", b =>
                {
                    b.Navigation("invoices");

                    b.Navigation("order_details");

                    b.Navigation("order_warehouses");
                });

            modelBuilder.Entity("Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("invoices");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Database.Entities.Product", b =>
                {
                    b.Navigation("carton_details");

                    b.Navigation("order_details");
                });

            modelBuilder.Entity("Database.Entities.Role", b =>
                {
                    b.Navigation("permissions");

                    b.Navigation("user_roles");
                });

            modelBuilder.Entity("Database.Entities.Shipper", b =>
                {
                    b.Navigation("invoices");
                });

            modelBuilder.Entity("Database.Entities.User", b =>
                {
                    b.Navigation("log_actions");

                    b.Navigation("user_role")
                        .IsRequired();

                    b.Navigation("user_warehouses");
                });

            modelBuilder.Entity("Database.Entities.Warehouse", b =>
                {
                    b.Navigation("cartons");

                    b.Navigation("invoices");

                    b.Navigation("order_warehouses");

                    b.Navigation("products");

                    b.Navigation("user_warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
